{"ast":null,"code":"var _jsxFileName = \"/Users/NisaKhahidir/Ironhack/projectpets/FurryFriendFinder/FFF/client/src/components/Forms/FormProfile.jsx\";\nimport React, { Component } from \"react\";\nimport { buildFormData } from \"../../utils\";\nimport apiHandler from \"../../api/apiHandler\";\nimport UserContext from \"../Auth/UserContext\";\n\nclass FormProfile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {\n        username: \"\",\n        password: \"\",\n        profilImg: \"\",\n        phone_number: 0\n      }\n    };\n    this.imageRef = React.createRef();\n\n    this.handleChange = event => {\n      const key = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        user: { ...this.state.user,\n          [key]: value\n        }\n      });\n    };\n\n    this.isValidInput = key => {\n      if (this.state.user[key] === \"\") {\n        return false;\n      } else return true;\n    };\n\n    this.checkError = () => {\n      for (const key in this.state.user) {\n        if (this.state[key] === \"\") {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const fd = new FormData();\n      const { ...data\n      } = this.state;\n      buildFormData(fd, data);\n      fd.append(\"profileImg\", this.imageRef.current.files[0]);\n      const userId = this.props.match.params.id;\n      apiHandler.updateUser(userId, fd).then(data => {\n        this.props.history.push(\"/profile\");\n        this.setState({\n          httpResponse: {\n            status: \"success\",\n            message: \"Profile successfully updated.\"\n          }\n        });\n        this.timeoutId = setTimeout(() => {\n          this.setState({\n            httpResponse: null\n          });\n        }, 2000);\n      }).catch(error => {\n        this.setState({\n          httpResponse: {\n            status: \"failure\",\n            message: \"Something bad happened while updating your profile, try again later\"\n          }\n        });\n        this.timeoutId = setTimeout(() => {\n          this.setState({\n            httpResponse: null\n          });\n        }, 2000);\n      });\n    };\n  }\n\n  componentDidMount() {\n    const userId = this.props.match.params.id;\n    apiHandler.getUserInfos(userId).then(data => {\n      this.setState({\n        user: data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"missing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"Edit profile\"), /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: 100,\n        height: 100\n      },\n      src: this.state.user.profileImg,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      ref: this.imageRef,\n      onChange: this.handleChange,\n      id: \"profilImg\",\n      name: \"profilImg\",\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      id: \"username\",\n      type: \"text\",\n      name: \"username\",\n      onChange: this.handleChange,\n      value: this.state.user.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }), !this.isValidInput(\"username\") && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"input-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"Invalid input\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      id: \"password\",\n      type: \"text\",\n      name: \"password\",\n      onChange: this.handleChange,\n      value: this.state.user.password || \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }), !this.isValidInput(\"password\") && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"input-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, \"Invalid input\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"phoneNumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, \"Phone number\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      id: \"phoneNumber\",\n      type: \"text\",\n      name: \"phoneNumber\",\n      onChange: this.handleChange,\n      value: this.state.user.phoneNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }), !this.isValidInput(\"phoneNumber\") && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"input-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, \"Invalid input\")), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, \"Save\")));\n  }\n\n}\n\nFormProfile.contextType = UserContext;\nexport default FormProfile;","map":{"version":3,"sources":["/Users/NisaKhahidir/Ironhack/projectpets/FurryFriendFinder/FFF/client/src/components/Forms/FormProfile.jsx"],"names":["React","Component","buildFormData","apiHandler","UserContext","FormProfile","state","user","username","password","profilImg","phone_number","imageRef","createRef","handleChange","event","key","target","name","value","setState","isValidInput","checkError","handleSubmit","preventDefault","fd","FormData","data","append","current","files","userId","props","match","params","id","updateUser","then","history","push","httpResponse","status","message","timeoutId","setTimeout","catch","error","componentDidMount","getUserInfos","console","log","render","width","height","profileImg","phoneNumber","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { buildFormData } from \"../../utils\";\nimport apiHandler from \"../../api/apiHandler\";\nimport UserContext from \"../Auth/UserContext\";\n\n\nclass FormProfile extends Component {\n  static contextType = UserContext;\n  state = {\n      user: {\n        username: \"\",\n        password:\"\",\n        profilImg: \"\",\n        phone_number: 0,\n      }\n  };\n\n  imageRef = React.createRef();\n\n  componentDidMount() {\n    const userId = this.props.match.params.id;\n    apiHandler\n      .getUserInfos(userId)\n      .then((data) => {\n        this.setState({ user: data});\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    }\n\n  handleChange = (event) => {\n    const key = event.target.name; \n    const value = event.target.value;\n    this.setState({ user: { ...this.state.user, [key]: value } });\n  };\n\n  isValidInput = (key) => {\n    if (this.state.user[key] === \"\") {\n      return false;\n    } else return true;\n  };\n\n  checkError = () => {\n    for (const key in this.state.user) {\n      if (this.state[key] === \"\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const fd = new FormData();\n    const {...data} = this.state;\n    buildFormData(fd, data)\n\n    fd.append(\"profileImg\", this.imageRef.current.files[0]);\n    \n    const userId = this.props.match.params.id;\n\n    apiHandler\n      .updateUser(userId, fd)\n      .then((data) => {\n        this.props.history.push(\"/profile\");\n        this.setState({\n          httpResponse: {\n            status: \"success\",\n            message: \"Profile successfully updated.\",\n          },\n        });\n\n        this.timeoutId = setTimeout(() => {\n          this.setState({ httpResponse: null });\n        }, 2000);\n      })\n      .catch((error) => {\n        this.setState({\n          httpResponse: {\n            status: \"failure\",\n            message:\n              \"Something bad happened while updating your profile, try again later\",\n          },\n        });\n\n        this.timeoutId = setTimeout(() => {\n          this.setState({ httpResponse: null });\n        }, 2000);\n      });\n  };\n\n  render() {\nconsole.log(this.state)\n    return (\n        <div className=\"missing\">\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <h1 className=\"header\">Edit profile</h1>\n          <img style={{width: 100, height: 100}} src={this.state.user.profileImg} alt=\"\"/>\n          <label className=\"label\" htmlFor=\"image\">\n            </label>\n            <input\n              ref={this.imageRef}\n              onChange={this.handleChange}\n              id=\"profilImg\"\n              name=\"profilImg\"\n              type=\"file\"\n            />\n            \n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"username\">\n              Username\n            </label>\n            <input\n              className=\"input\"\n              id=\"username\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.handleChange}\n              value={this.state.user.username}\n\n            />\n            {!this.isValidInput(\"username\") && (\n              <p className=\"input-error\">Invalid input</p>\n            )}\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              className=\"input\"\n              id=\"password\"\n              type=\"text\"\n              name=\"password\"\n              onChange={this.handleChange}\n              value={this.state.user.password || \"\"}\n              \n            />\n            {!this.isValidInput(\"password\") && (\n              <p className=\"input-error\">Invalid input</p>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"phoneNumber\">\n              Phone number\n            </label>\n            <input\n              className=\"input\"\n              id=\"phoneNumber\"\n              type=\"text\"\n              name=\"phoneNumber\"\n              onChange={this.handleChange}\n              value={this.state.user.phoneNumber}\n            />\n            {!this.isValidInput(\"phoneNumber\") && (\n              <p className=\"input-error\">Invalid input</p>\n            )}\n          </div>\n          <button>Save</button>\n        </form>\n      \n      </div>\n    );\n  }\n}\n\nexport default FormProfile;\n"]},"metadata":{},"sourceType":"module"}