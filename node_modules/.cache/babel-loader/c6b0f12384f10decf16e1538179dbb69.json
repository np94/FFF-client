{"ast":null,"code":"import axios from \"axios\";\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  withCredentials: true // Cookie is sent to client when using this service. (used for session)\n\n});\n\nfunction errorHandler(error) {\n  if (error.response.data) {\n    console.log(error.response && error.response.data);\n    throw error;\n  }\n\n  throw error;\n}\n\nexport default {\n  service,\n\n  signup(userInfo) {\n    return service.post(\"/api/auth/signup\", userInfo).then(res => res.data).catch(errorHandler);\n  },\n\n  signin(userInfo) {\n    return service.post(\"/api/auth/signin\", userInfo).then(res => res.data).catch(errorHandler);\n  },\n\n  isLoggedIn() {\n    return service.get(\"/api/auth/isLoggedIn\").then(res => res.data).catch(errorHandler);\n  },\n\n  logout() {\n    return service.get(\"/api/auth/logout\").then(res => res.data).catch(errorHandler);\n  },\n\n  getAnnounce() {\n    return service.get(\"/api/announce\").then(res => res.data).catch(errorHandler);\n  },\n\n  getOneAnnounce() {\n    return service.get(`/api/announce/${announce._id}`).then(res => res.data).catch(errorHandler);\n  }\n\n};","map":{"version":3,"sources":["/Users/NisaKhahidir/Ironhack/projectpets/FurryFriendFinder/FFF/client/src/api/apiHandler.js"],"names":["axios","service","create","baseURL","process","env","REACT_APP_BACKEND_URL","withCredentials","errorHandler","error","response","data","console","log","signup","userInfo","post","then","res","catch","signin","isLoggedIn","get","logout","getAnnounce","getOneAnnounce","announce","_id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,qBADM;AAE3BC,EAAAA,eAAe,EAAE,IAFU,CAEJ;;AAFI,CAAb,CAAhB;;AAKA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAIA,KAAK,CAACC,QAAN,CAAeC,IAAnB,EAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeC,IAA7C;AACA,UAAMF,KAAN;AACD;;AACD,QAAMA,KAAN;AACD;;AAED,eAAe;AACbR,EAAAA,OADa;;AAGba,EAAAA,MAAM,CAACC,QAAD,EAAW;AACf,WAAOd,OAAO,CACXe,IADI,CACC,kBADD,EACqBD,QADrB,EAEJE,IAFI,CAEEC,GAAD,IAASA,GAAG,CAACP,IAFd,EAGJQ,KAHI,CAGEX,YAHF,CAAP;AAID,GARY;;AAUbY,EAAAA,MAAM,CAACL,QAAD,EAAW;AACf,WAAOd,OAAO,CACXe,IADI,CACC,kBADD,EACqBD,QADrB,EAEJE,IAFI,CAEEC,GAAD,IAASA,GAAG,CAACP,IAFd,EAGJQ,KAHI,CAGEX,YAHF,CAAP;AAID,GAfY;;AAiBba,EAAAA,UAAU,GAAG;AACX,WAAOpB,OAAO,CACXqB,GADI,CACA,sBADA,EAEJL,IAFI,CAEEC,GAAD,IAASA,GAAG,CAACP,IAFd,EAGJQ,KAHI,CAGEX,YAHF,CAAP;AAID,GAtBY;;AAwBbe,EAAAA,MAAM,GAAG;AACP,WAAOtB,OAAO,CACXqB,GADI,CACA,kBADA,EAEJL,IAFI,CAEEC,GAAD,IAASA,GAAG,CAACP,IAFd,EAGJQ,KAHI,CAGEX,YAHF,CAAP;AAID,GA7BY;;AA+BbgB,EAAAA,WAAW,GAAG;AACZ,WAAOvB,OAAO,CACXqB,GADI,CACA,eADA,EAEJL,IAFI,CAEEC,GAAD,IAASA,GAAG,CAACP,IAFd,EAGJQ,KAHI,CAGEX,YAHF,CAAP;AAID,GApCY;;AAsCbiB,EAAAA,cAAc,GAAG;AACf,WAAOxB,OAAO,CACXqB,GADI,CACC,iBAAgBI,QAAQ,CAACC,GAAI,EAD9B,EAEJV,IAFI,CAEEC,GAAD,IAASA,GAAG,CAACP,IAFd,EAGJQ,KAHI,CAGEX,YAHF,CAAP;AAID;;AA3CY,CAAf","sourcesContent":["import axios from \"axios\";\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  withCredentials: true, // Cookie is sent to client when using this service. (used for session)\n});\n\nfunction errorHandler(error) {\n  if (error.response.data) {\n    console.log(error.response && error.response.data);\n    throw error;\n  }\n  throw error;\n}\n\nexport default {\n  service,\n\n  signup(userInfo) {\n    return service\n      .post(\"/api/auth/signup\", userInfo)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  signin(userInfo) {\n    return service\n      .post(\"/api/auth/signin\", userInfo)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  isLoggedIn() {\n    return service\n      .get(\"/api/auth/isLoggedIn\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  logout() {\n    return service\n      .get(\"/api/auth/logout\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  getAnnounce() {\n    return service\n      .get(\"/api/announce\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  getOneAnnounce() {\n    return service\n      .get(`/api/announce/${announce._id}`)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}