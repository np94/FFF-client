{"ast":null,"code":"var _jsxFileName = \"/Users/NisaKhahidir/Ironhack/projectpets/FurryFriendFinder/FFF/client/src/components/Forms/FormProfile.jsx\";\nimport React, { Component } from \"react\";\nimport Button from \"../../Button\";\nimport apiHandler from \"../../api/apiHandler\";\nimport UserContext from \"../Auth/UserContext\";\n\nclass FormProfile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null,\n      tmpUrl: \"\",\n      httpResponse: null,\n      isLoading: true\n    };\n    this.imageRef = React.createRef();\n\n    this.handleChange = event => {\n      const key = event.target.name; // This function requires that you have the \"name\" attribute on your form fields.\n\n      const value = event.target.value;\n      this.setState({\n        user: { ...this.state.user,\n          [key]: value\n        }\n      });\n    };\n\n    this.isValidInput = key => {\n      if (this.state.user[key] === \"\") {\n        return false;\n      } else return true;\n    };\n\n    this.checkError = () => {\n      for (const key in this.state.user) {\n        if (this.state[key] === \"\") {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const fd = new FormData();\n\n      for (const key in this.state.user) {\n        if (key === \"profileImg\") continue;\n        fd.append(key, this.state.user[key]);\n      }\n\n      if (this.imageRef.current.files[0]) {\n        fd.append(\"profileImg\", this.imageRef.current.files[0]);\n      }\n\n      apiHandler.updateUser(fd).then(data => {\n        this.context.setUser(data);\n        this.setState({\n          httpResponse: {\n            status: \"success\",\n            message: \"Profile successfully updated.\"\n          }\n        });\n        this.timeoutId = setTimeout(() => {\n          this.setState({\n            httpResponse: null\n          });\n        }, 2000);\n      }).catch(error => {\n        this.setState({\n          httpResponse: {\n            status: \"failure\",\n            message: \"Something bad happened while updating your profile, try again later\"\n          }\n        });\n        this.timeoutId = setTimeout(() => {\n          this.setState({\n            httpResponse: null\n          });\n        }, 2000);\n      });\n    };\n\n    this.handleFileSelect = temporaryURL => {\n      // Get the temporaryURL from the UploadWidget component and\n      // set the state so we can have a visual feedback on what the image will look like :)\n      this.setState({\n        tmpUrl: temporaryURL\n      });\n    };\n  }\n\n  componentDidMount() {\n    apiHandler.getUserInfos().then(data => {\n      this.setState({\n        user: data,\n        isLoading: false\n      });\n    }).catch(error => {\n      this.setState({\n        isLoading: false,\n        httpResponse: {\n          status: \"failure\",\n          message: \"Something bad happened, please try again later\"\n        }\n      });\n    });\n  }\n\n  render() {\n    // const { user } = this.state;\n    const {\n      httpResponse\n    } = this.state;\n    if (this.state.isLoading) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 38\n      }\n    }, \"Loading...\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"missing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"form-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      autoComplete: \"off\",\n      className: \"form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, \"Edit profile\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"profileImg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"round-image user-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.tmpUrl || this.state.user.profileImg,\n      alt: this.state.user.profileImg,\n      ref: this.imageRef,\n      onChange: this.handleChange,\n      value: this.state.user.profileImg,\n      name: \"profileImg\",\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      id: \"username\",\n      type: \"text\",\n      name: \"username\",\n      onChange: this.handleChange,\n      value: this.state.user.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }), !this.isValidInput(\"username\") && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"input-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, \"Invalid input\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      id: \"password\",\n      type: \"text\",\n      name: \"password\",\n      onChange: this.handleChange,\n      value: this.state.user.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }), !this.isValidInput(\"password\") && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"input-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, \"Invalid input\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"phoneNumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, \"Phone number\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      id: \"phoneNumber\",\n      type: \"text\",\n      name: \"phoneNumber\",\n      onChange: this.handleChange,\n      value: this.state.user.phoneNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }), !this.isValidInput(\"phoneNumber\") && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"input-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    }, \"Invalid input\")), /*#__PURE__*/React.createElement(Button, {\n      primary: true,\n      disabled: this.checkError(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, \"Save\"))));\n  }\n\n}\n\nFormProfile.contextType = UserContext;\nexport default FormProfile;","map":{"version":3,"sources":["/Users/NisaKhahidir/Ironhack/projectpets/FurryFriendFinder/FFF/client/src/components/Forms/FormProfile.jsx"],"names":["React","Component","Button","apiHandler","UserContext","FormProfile","state","user","tmpUrl","httpResponse","isLoading","imageRef","createRef","handleChange","event","key","target","name","value","setState","isValidInput","checkError","handleSubmit","preventDefault","fd","FormData","append","current","files","updateUser","then","data","context","setUser","status","message","timeoutId","setTimeout","catch","error","handleFileSelect","temporaryURL","componentDidMount","getUserInfos","render","profileImg","username","password","phoneNumber","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"../../Button\";\nimport apiHandler from \"../../api/apiHandler\";\nimport UserContext from \"../Auth/UserContext\";\n\n\nclass FormProfile extends Component {\n  static contextType = UserContext;\n  state = {\n    user: null,\n    tmpUrl: \"\",\n    httpResponse: null,\n    isLoading: true,\n  };\n\n  imageRef = React.createRef();\n\n  componentDidMount() {\n    apiHandler\n      .getUserInfos()\n      .then((data) => {\n        this.setState({ user: data, isLoading: false });\n      })\n      .catch((error) => {\n        this.setState({\n          isLoading: false,\n          httpResponse: {\n            status: \"failure\",\n            message: \"Something bad happened, please try again later\",\n          },\n        });\n      });\n  }\n\n  handleChange = (event) => {\n    const key = event.target.name; // This function requires that you have the \"name\" attribute on your form fields.\n    const value = event.target.value;\n    this.setState({ user: { ...this.state.user, [key]: value } });\n  };\n\n  isValidInput = (key) => {\n    if (this.state.user[key] === \"\") {\n      return false;\n    } else return true;\n  };\n\n  checkError = () => {\n    for (const key in this.state.user) {\n      if (this.state[key] === \"\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const fd = new FormData();\n\n    for (const key in this.state.user) {\n      if (key === \"profileImg\") continue;\n      fd.append(key, this.state.user[key]);\n    }\n\n    if (this.imageRef.current.files[0]) {\n      fd.append(\"profileImg\", this.imageRef.current.files[0]);\n    }\n\n    apiHandler\n      .updateUser(fd)\n      .then((data) => {\n        this.context.setUser(data);\n        this.setState({\n          httpResponse: {\n            status: \"success\",\n            message: \"Profile successfully updated.\",\n          },\n        });\n\n        this.timeoutId = setTimeout(() => {\n          this.setState({ httpResponse: null });\n        }, 2000);\n      })\n      .catch((error) => {\n        this.setState({\n          httpResponse: {\n            status: \"failure\",\n            message:\n              \"Something bad happened while updating your profile, try again later\",\n          },\n        });\n\n        this.timeoutId = setTimeout(() => {\n          this.setState({ httpResponse: null });\n        }, 2000);\n      });\n  };\n\n  handleFileSelect = (temporaryURL) => {\n    // Get the temporaryURL from the UploadWidget component and\n    // set the state so we can have a visual feedback on what the image will look like :)\n    this.setState({ tmpUrl: temporaryURL });\n  };\n\n  render() {\n    // const { user } = this.state;\n    const { httpResponse } = this.state;\n\n    if (this.state.isLoading) return <div>Loading...</div>;\n\n    return (\n        <div className=\"missing\">\n      <section className=\"form-section\">\n        <form autoComplete=\"off\" className=\"form\" onSubmit={this.handleSubmit}>\n          <h1 className=\"header\">Edit profile</h1>\n          <label htmlFor=\"profileImg\"></label>\n          <div className=\"round-image user-image\">\n            <img\n              src={this.state.tmpUrl || this.state.user.profileImg}\n              alt={this.state.user.profileImg}\n              ref={this.imageRef}\n              onChange={this.handleChange}\n              value={this.state.user.profileImg}\n              name=\"profileImg\"\n              type=\"file\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"username\">\n              Username\n            </label>\n            <input\n              className=\"input\"\n              id=\"username\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.handleChange}\n              value={this.state.user.username}\n            />\n            {!this.isValidInput(\"username\") && (\n              <p className=\"input-error\">Invalid input</p>\n            )}\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              className=\"input\"\n              id=\"password\"\n              type=\"text\"\n              name=\"password\"\n              onChange={this.handleChange}\n              value={this.state.user.password}\n            />\n            {!this.isValidInput(\"password\") && (\n              <p className=\"input-error\">Invalid input</p>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"phoneNumber\">\n              Phone number\n            </label>\n            <input\n              className=\"input\"\n              id=\"phoneNumber\"\n              type=\"text\"\n              name=\"phoneNumber\"\n              onChange={this.handleChange}\n              value={this.state.user.phoneNumber}\n            />\n            {!this.isValidInput(\"phoneNumber\") && (\n              <p className=\"input-error\">Invalid input</p>\n            )}\n          </div>\n          <Button primary disabled={this.checkError()}>\n            Save\n          </Button>\n        </form>\n      </section>\n      </div>\n    );\n  }\n}\n\nexport default FormProfile;\n"]},"metadata":{},"sourceType":"module"}