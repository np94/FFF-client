{"ast":null,"code":"var _jsxFileName = \"/Users/NisaKhahidir/Ironhack/projectpets/FurryFriendFinder/FFF/client/src/components/Forms/FormProfile.jsx\";\nimport React, { Component } from \"react\";\nimport apiHandler from \"../../api/apiHandler\";\nimport UserContext from \"../Auth/UserContext\";\nimport Button from \"../../Button\";\n\nclass FormProfile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      phone_number: 0\n    };\n\n    this.handleChange = event => {\n      const key = event.target.name; // This function requires that you have the \"name\" attribute on your form fields.\n\n      const value = event.target.value;\n      this.setState({\n        user: { ...this.state.user,\n          [key]: value\n        }\n      });\n    };\n\n    this.isValidInput = key => {\n      if (this.state.user[key] === \"\") {\n        return false;\n      } else return true;\n    };\n\n    this.checkError = () => {\n      for (const key in this.state.user) {\n        if (this.state[key] === \"\") {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const fd = new FormData();\n\n      for (const key in this.state.user) {\n        if (key === \"profileImg\") continue;\n        fd.append(key, this.state[key]);\n      }\n\n      if (this.imageRef.current.files[0]) {\n        fd.append(\"profileImg\", this.imageRef.current.files[0]);\n      }\n\n      apiHandler.updateUser(fd).then(data => {\n        this.context.setUser(data);\n        this.setState({\n          httpResponse: {\n            status: \"success\",\n            message: \"Profile successfully updated.\"\n          }\n        });\n        this.timeoutId = setTimeout(() => {\n          this.setState({\n            httpResponse: null\n          });\n        }, 2000);\n      }).catch(error => {\n        this.setState({\n          httpResponse: {\n            status: \"failure\",\n            message: \"Something bad happened while updating your profile, try again later\"\n          }\n        });\n        this.timeoutId = setTimeout(() => {\n          this.setState({\n            httpResponse: null\n          });\n        }, 2000);\n      });\n    };\n\n    this.handleFileSelect = temporaryURL => {\n      // Get the temporaryURL from the UploadWidget component and\n      // set the state so we can have a visual feedback on what the image will look like :)\n      this.setState({\n        tmpUrl: temporaryURL\n      });\n    };\n  }\n\n  componentDidMount() {\n    apiHandler.getUserInfos().then(data => {\n      this.setState({\n        user: data,\n        isLoading: false\n      });\n    }).catch(error => {\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    // const { user } = this.state;\n    const {\n      httpResponse\n    } = this.state;\n    if (this.state.isLoading) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 38\n      }\n    }, \"Loading...\");\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"form-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      autoComplete: \"off\",\n      className: \"form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, \"Edit profile\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      id: \"username\",\n      type: \"text\",\n      name: \"username\",\n      onChange: this.handleChange,\n      value: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }), !this.isValidInput(\"username\") && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"input-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"Invalid input\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      id: \"lastpasswordame\",\n      type: \"text\",\n      name: \"password\",\n      onChange: this.handleChange,\n      value: this.state.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }), !this.isValidInput(\"lastName\") && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"input-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, \"Invalid input\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"phone_number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, \"Phone number\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      id: \"phone_number\",\n      type: \"number\",\n      name: \"phone_number\",\n      onChange: this.handleChange,\n      value: this.state.phone_number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }), !this.isValidInput(\"phone_number\") && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"input-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }, \"Invalid input\")), /*#__PURE__*/React.createElement(Button, {\n      primary: true,\n      disabled: this.checkError(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, \"Save\")));\n  }\n\n}\n\nFormProfile.contextType = UserContext;\nexport default FormProfile;","map":{"version":3,"sources":["/Users/NisaKhahidir/Ironhack/projectpets/FurryFriendFinder/FFF/client/src/components/Forms/FormProfile.jsx"],"names":["React","Component","apiHandler","UserContext","Button","FormProfile","state","username","email","password","phone_number","handleChange","event","key","target","name","value","setState","user","isValidInput","checkError","handleSubmit","preventDefault","fd","FormData","append","imageRef","current","files","updateUser","then","data","context","setUser","httpResponse","status","message","timeoutId","setTimeout","catch","error","handleFileSelect","temporaryURL","tmpUrl","componentDidMount","getUserInfos","isLoading","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport apiHandler from \"../../api/apiHandler\";\nimport UserContext from \"../Auth/UserContext\";\nimport Button from \"../../Button\"\n\n\nclass FormProfile extends Component {\n  static contextType = UserContext;\n  state = {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        phone_number: 0,\n  }\n\n  componentDidMount() {\n    apiHandler\n      .getUserInfos()\n      .then((data) => {\n        this.setState({ user: data, isLoading: false });\n      })\n      .catch((error) => {\n        this.setState({\n          isLoading: false\n        });\n      });\n  }\n\n  handleChange = (event) => {\n    const key = event.target.name; // This function requires that you have the \"name\" attribute on your form fields.\n    const value = event.target.value;\n    this.setState({ user: { ...this.state.user, [key]: value } });\n  };\n\n  isValidInput = (key) => {\n    if (this.state.user[key] === \"\") {\n      return false;\n    } else return true;\n  };\n\n  checkError = () => {\n    for (const key in this.state.user) {\n      if (this.state[key] === \"\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const fd = new FormData();\n\n    for (const key in this.state.user) {\n      if (key === \"profileImg\") continue;\n      fd.append(key, this.state[key]);\n    }\n\n    if (this.imageRef.current.files[0]) {\n      fd.append(\"profileImg\", this.imageRef.current.files[0]);\n    }\n\n    apiHandler\n      .updateUser(fd)\n      .then((data) => {\n        this.context.setUser(data);\n        this.setState({\n          httpResponse: {\n            status: \"success\",\n            message: \"Profile successfully updated.\",\n          },\n        });\n\n        this.timeoutId = setTimeout(() => {\n          this.setState({ httpResponse: null });\n        }, 2000);\n      })\n      .catch((error) => {\n        this.setState({\n          httpResponse: {\n            status: \"failure\",\n            message:\n              \"Something bad happened while updating your profile, try again later\",\n          },\n        });\n\n        this.timeoutId = setTimeout(() => {\n          this.setState({ httpResponse: null });\n        }, 2000);\n      });\n  };\n\n  handleFileSelect = (temporaryURL) => {\n    // Get the temporaryURL from the UploadWidget component and\n    // set the state so we can have a visual feedback on what the image will look like :)\n    this.setState({ tmpUrl: temporaryURL });\n  };\n\n  render() {\n    // const { user } = this.state;\n    const { httpResponse } = this.state;\n\n    if (this.state.isLoading) return <div>Loading...</div>;\n\n    return (\n      <section className=\"form-section\">\n        <form autoComplete=\"off\" className=\"form\" onSubmit={this.handleSubmit}>\n          <h1 className=\"header\">Edit profile</h1>\n\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"username\">\n              Username\n            </label>\n            <input\n              className=\"input\"\n              id=\"username\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.handleChange}\n              value={this.state.username}\n            />\n            {!this.isValidInput(\"username\") && (\n              <p className=\"input-error\">Invalid input</p>\n            )}\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              className=\"input\"\n              id=\"lastpasswordame\"\n              type=\"text\"\n              name=\"password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n            />\n            {!this.isValidInput(\"lastName\") && (\n              <p className=\"input-error\">Invalid input</p>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"phone_number\">\n              Phone number\n            </label>\n            <input\n              className=\"input\"\n              id=\"phone_number\"\n              type=\"number\"\n              name=\"phone_number\"\n              onChange={this.handleChange}\n              value={this.state.phone_number}\n            />\n            {!this.isValidInput(\"phone_number\") && (\n              <p className=\"input-error\">Invalid input</p>\n            )}\n          </div>\n          <Button primary disabled={this.checkError()}>\n            Save\n          </Button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default FormProfile;"]},"metadata":{},"sourceType":"module"}