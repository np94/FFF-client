{"ast":null,"code":"var _jsxFileName = \"/Users/NisaKhahidir/Ironhack/projectpets/FurryFriendFinder/FFF/client/src/components/Forms/FormProfile.jsx\";\nimport React, { Component } from \"react\";\nimport { buildFormData } from \"../../utils\";\nimport apiHandler from \"../../api/apiHandler\";\nimport UserContext from \"../Auth/UserContext\";\n\nclass FormProfile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null,\n      tmpUrl: \"\",\n      httpResponse: null\n    };\n    this.imageRef = React.createRef();\n\n    this.handleChange = event => {\n      const key = event.target.name; // This function requires that you have the \"name\" attribute on your form fields.\n\n      const value = event.target.value;\n      this.setState({\n        user: { ...this.state.user,\n          [key]: value\n        }\n      });\n    };\n\n    this.isValidInput = key => {\n      if (this.state.user[key] === \"\") {\n        return false;\n      } else return true;\n    };\n\n    this.checkError = () => {\n      for (const key in this.state.user) {\n        if (this.state[key] === \"\") {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const fd = new FormData();\n      const { ...data\n      } = this.state;\n      buildFormData(fd, data);\n      fd.append(\"profileImg\", this.imageRef.current.files[0]);\n      const userId = this.props.match.params.id;\n      apiHandler.updateUser(userId, fd).then(data => {\n        this.props.history.push(\"/profile\");\n        this.setState({\n          httpResponse: {\n            status: \"success\",\n            message: \"Profile successfully updated.\"\n          }\n        });\n        this.timeoutId = setTimeout(() => {\n          this.setState({\n            httpResponse: null\n          });\n        }, 2000);\n      }).catch(error => {\n        this.setState({\n          httpResponse: {\n            status: \"failure\",\n            message: \"Something bad happened while updating your profile, try again later\"\n          }\n        });\n        this.timeoutId = setTimeout(() => {\n          this.setState({\n            httpResponse: null\n          });\n        }, 2000);\n      });\n    };\n  }\n\n  componentDidMount() {\n    const userId = this.props.match.params.id;\n    apiHandler.getUserInfos(userId).then(data => {\n      this.setState({\n        user: data\n      });\n    }).catch(error => {\n      this.setState({\n        httpResponse: {\n          status: \"failure\",\n          message: \"Something bad happened, please try again later\"\n        }\n      });\n    });\n  }\n\n  render() {\n    // const { user } = this.state;\n    const {\n      httpResponse\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"missing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"Edit profile\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.tmpUrl || this.state.user.profileImg,\n      alt: this.state.user.profilImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      ref: this.imageRef,\n      onChange: this.handleChange,\n      value: this.state.user.profilImg,\n      id: \"profilImg\",\n      name: \"profilImg\",\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      id: \"username\",\n      type: \"text\",\n      name: \"username\",\n      onChange: this.handleChange,\n      value: this.state.user.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }), !this.isValidInput(\"username\") && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"input-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, \"Invalid input\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      id: \"password\",\n      type: \"text\",\n      name: \"password\",\n      onChange: this.handleChange,\n      value: this.state.user.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }), !this.isValidInput(\"password\") && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"input-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, \"Invalid input\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"phoneNumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, \"Phone number\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      id: \"phoneNumber\",\n      type: \"text\",\n      name: \"phoneNumber\",\n      onChange: this.handleChange,\n      value: this.state.user.phoneNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }), !this.isValidInput(\"phoneNumber\") && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"input-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, \"Invalid input\")), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, \"Save\")));\n  }\n\n}\n\nFormProfile.contextType = UserContext;\nexport default FormProfile;","map":{"version":3,"sources":["/Users/NisaKhahidir/Ironhack/projectpets/FurryFriendFinder/FFF/client/src/components/Forms/FormProfile.jsx"],"names":["React","Component","buildFormData","apiHandler","UserContext","FormProfile","state","user","tmpUrl","httpResponse","imageRef","createRef","handleChange","event","key","target","name","value","setState","isValidInput","checkError","handleSubmit","preventDefault","fd","FormData","data","append","current","files","userId","props","match","params","id","updateUser","then","history","push","status","message","timeoutId","setTimeout","catch","error","componentDidMount","getUserInfos","render","profileImg","profilImg","username","password","phoneNumber","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { buildFormData } from \"../../utils\";\nimport apiHandler from \"../../api/apiHandler\";\nimport UserContext from \"../Auth/UserContext\";\n\n\nclass FormProfile extends Component {\n  static contextType = UserContext;\n  state = {\n    user: null,\n    tmpUrl: \"\",\n    httpResponse: null,\n  };\n\n  imageRef = React.createRef();\n\n  componentDidMount() {\n    const userId = this.props.match.params.id;\n    apiHandler\n      .getUserInfos(userId)\n      .then((data) => {\n        this.setState({ user: data});\n      })\n      .catch((error) => {\n        this.setState({\n          httpResponse: {\n            status: \"failure\",\n            message: \"Something bad happened, please try again later\",\n          },\n        });\n      });\n  }\n\n  handleChange = (event) => {\n    const key = event.target.name; // This function requires that you have the \"name\" attribute on your form fields.\n    const value = event.target.value;\n    this.setState({ user: { ...this.state.user, [key]: value } });\n  };\n\n  isValidInput = (key) => {\n    if (this.state.user[key] === \"\") {\n      return false;\n    } else return true;\n  };\n\n  checkError = () => {\n    for (const key in this.state.user) {\n      if (this.state[key] === \"\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const fd = new FormData();\n    const {...data} = this.state;\n    buildFormData(fd, data)\n\n    fd.append(\"profileImg\", this.imageRef.current.files[0]);\n    \n    const userId = this.props.match.params.id;\n\n    apiHandler\n      .updateUser(userId, fd)\n      .then((data) => {\n        this.props.history.push(\"/profile\");\n        this.setState({\n          httpResponse: {\n            status: \"success\",\n            message: \"Profile successfully updated.\",\n          },\n        });\n\n        this.timeoutId = setTimeout(() => {\n          this.setState({ httpResponse: null });\n        }, 2000);\n      })\n      .catch((error) => {\n        this.setState({\n          httpResponse: {\n            status: \"failure\",\n            message:\n              \"Something bad happened while updating your profile, try again later\",\n          },\n        });\n\n        this.timeoutId = setTimeout(() => {\n          this.setState({ httpResponse: null });\n        }, 2000);\n      });\n  };\n\n  render() {\n    // const { user } = this.state;\n    const { httpResponse } = this.state;\n\n    return (\n        <div className=\"missing\">\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <h1 className=\"header\">Edit profile</h1>\n            <img\n              src={this.state.tmpUrl || this.state.user.profileImg}\n              alt={this.state.user.profilImg}\n            />\n            <input\n              ref={this.imageRef}\n              onChange={this.handleChange}\n              value={this.state.user.profilImg}\n              id=\"profilImg\"\n              name=\"profilImg\"\n              type=\"file\"\n            />\n            \n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"username\">\n              Username\n            </label>\n            <input\n              className=\"input\"\n              id=\"username\"\n              type=\"text\"\n              name=\"username\"\n              onChange={this.handleChange}\n              value={this.state.user.username}\n\n            />\n            {!this.isValidInput(\"username\") && (\n              <p className=\"input-error\">Invalid input</p>\n            )}\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              className=\"input\"\n              id=\"password\"\n              type=\"text\"\n              name=\"password\"\n              onChange={this.handleChange}\n              value={this.state.user.password}\n              \n            />\n            {!this.isValidInput(\"password\") && (\n              <p className=\"input-error\">Invalid input</p>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"phoneNumber\">\n              Phone number\n            </label>\n            <input\n              className=\"input\"\n              id=\"phoneNumber\"\n              type=\"text\"\n              name=\"phoneNumber\"\n              onChange={this.handleChange}\n              value={this.state.user.phoneNumber}\n            />\n            {!this.isValidInput(\"phoneNumber\") && (\n              <p className=\"input-error\">Invalid input</p>\n            )}\n          </div>\n          <button>Save</button>\n        </form>\n      \n      </div>\n    );\n  }\n}\n\nexport default FormProfile;\n"]},"metadata":{},"sourceType":"module"}