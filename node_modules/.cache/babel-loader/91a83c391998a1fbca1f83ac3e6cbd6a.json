{"ast":null,"code":"var _jsxFileName = \"/Users/NisaKhahidir/Ironhack/projectpets/FurryFriendFinder/FFF/client/src/components/UploadWidget.jsx\";\nimport React from \"react\";\nimport \"../styles/UploadWidget.css\"; // https://reactjs.org/docs/forwarding-refs.html\n\nconst UploadWidget = React.forwardRef((props, ref) => {\n  // In this component we foward the ref of the input type file in order to deal with it in the parent component.\n  const handleFileSelect = event => {\n    // This feature allows us to create a \"fake URL\" of the file that the user wants to upload\n    // In order to display the output to the user.\n    // See <FormProfile /> or <ItemForm />\n    const file = event.target.files[0];\n    const tempURL = URL.createObjectURL(file);\n    props.onFileSelect && props.onFileSelect(tempURL); // ^------------------------ You can use guard operators in your normal javascript too !\n    // This means that the prop onFileSelect isn't mandatory in order to use this component.\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"UploadWidget label\",\n    htmlFor: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, props.children), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleFileSelect,\n    ref: ref,\n    className: \"UploadWidget input\",\n    id: props.name,\n    name: props.name,\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n});\nexport default UploadWidget;","map":{"version":3,"sources":["/Users/NisaKhahidir/Ironhack/projectpets/FurryFriendFinder/FFF/client/src/components/UploadWidget.jsx"],"names":["React","UploadWidget","forwardRef","props","ref","handleFileSelect","event","file","target","files","tempURL","URL","createObjectURL","onFileSelect","name","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,4BAAP,C,CAEA;;AAEA,MAAMC,YAAY,GAAGD,KAAK,CAACE,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACpD;AAEA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC;AACA;AACA;AACA,UAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,UAAMC,OAAO,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAhB;AACAJ,IAAAA,KAAK,CAACU,YAAN,IAAsBV,KAAK,CAACU,YAAN,CAAmBH,OAAnB,CAAtB,CANkC,CAOlC;AACA;AACD,GATD;;AAWA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,oBAAjB;AAAsC,IAAA,OAAO,EAAEP,KAAK,CAACW,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,KAAK,CAACY,QADT,CADF,eAIE;AACE,IAAA,QAAQ,EAAEV,gBADZ;AAEE,IAAA,GAAG,EAAED,GAFP;AAGE,IAAA,SAAS,EAAC,oBAHZ;AAIE,IAAA,EAAE,EAAED,KAAK,CAACW,IAJZ;AAKE,IAAA,IAAI,EAAEX,KAAK,CAACW,IALd;AAME,IAAA,IAAI,EAAC,MANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAeD,CA7BoB,CAArB;AA+BA,eAAeb,YAAf","sourcesContent":["import React from \"react\";\nimport \"../styles/UploadWidget.css\";\n\n// https://reactjs.org/docs/forwarding-refs.html\n\nconst UploadWidget = React.forwardRef((props, ref) => {\n  // In this component we foward the ref of the input type file in order to deal with it in the parent component.\n\n  const handleFileSelect = (event) => {\n    // This feature allows us to create a \"fake URL\" of the file that the user wants to upload\n    // In order to display the output to the user.\n    // See <FormProfile /> or <ItemForm />\n    const file = event.target.files[0];\n    const tempURL = URL.createObjectURL(file);\n    props.onFileSelect && props.onFileSelect(tempURL);\n    // ^------------------------ You can use guard operators in your normal javascript too !\n    // This means that the prop onFileSelect isn't mandatory in order to use this component.\n  };\n\n  return (\n    <React.Fragment>\n      <label className=\"UploadWidget label\" htmlFor={props.name}>\n        {props.children}\n      </label>\n      <input\n        onChange={handleFileSelect}\n        ref={ref}\n        className=\"UploadWidget input\"\n        id={props.name}\n        name={props.name}\n        type=\"file\"\n      />\n    </React.Fragment>\n  );\n});\n\nexport default UploadWidget;"]},"metadata":{},"sourceType":"module"}