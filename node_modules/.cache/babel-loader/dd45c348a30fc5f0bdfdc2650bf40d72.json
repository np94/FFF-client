{"ast":null,"code":"var _jsxFileName = \"/Users/NisaKhahidir/Ironhack/projectpets/FurryFriendFinder/FFF/client/src/components/Auth/UserProvider.jsx\";\nimport React, { Component } from \"react\";\nimport apiHandler from \"../../api/apiHandler\";\nimport { UserContext } from \"./UserContext\";\n\nclass UserProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null,\n      isLoggedIn: false,\n      isLoading: true\n    };\n\n    this.setUser = user => {\n      this.setState({\n        user,\n        isLoggedIn: true\n      });\n    };\n\n    this.removeUser = () => {\n      this.setState({\n        user: null,\n        isLoggedIn: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    apiHandler.isLoggedIn().then(data => {\n      this.setState({\n        user: data,\n        isLoggedIn: true,\n        isLoading: false\n      });\n    }).catch(error => {\n      this.setState({\n        user: null,\n        isLoggedIn: false,\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    //  Setup all the values/functions you want to expose to anybody reading\n    // from the AuthContext.\n    const authValues = {\n      user: this.state.user,\n      setUser: this.setUser,\n      removeUser: this.removeUser,\n      isLoggedIn: this.state.isLoggedIn,\n      isLoading: this.state.isLoading\n    };\n    return /*#__PURE__*/React.createElement(UserContext.Provider, {\n      value: authValues,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport default UserProvider;","map":{"version":3,"sources":["/Users/NisaKhahidir/Ironhack/projectpets/FurryFriendFinder/FFF/client/src/components/Auth/UserProvider.jsx"],"names":["React","Component","apiHandler","UserContext","UserProvider","state","user","isLoggedIn","isLoading","setUser","setState","removeUser","componentDidMount","then","data","catch","error","render","authValues","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCI,KADmC,GAC3B;AACNC,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,UAAU,EAAE,KAFN;AAGNC,MAAAA,SAAS,EAAE;AAHL,KAD2B;;AAAA,SAkBnCC,OAlBmC,GAkBxBH,IAAD,IAAU;AAClB,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,IAAF;AAAQC,QAAAA,UAAU,EAAE;AAApB,OAAd;AACD,KApBkC;;AAAA,SAsBnCI,UAtBmC,GAsBtB,MAAM;AACjB,WAAKD,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,UAAU,EAAE;AAA1B,OAAd;AACD,KAxBkC;AAAA;;AAOnCK,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,UAAU,CACPK,UADH,GAEGM,IAFH,CAESC,IAAD,IAAU;AACd,WAAKJ,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAEQ,IAAR;AAAcP,QAAAA,UAAU,EAAE,IAA1B;AAAgCC,QAAAA,SAAS,EAAE;AAA3C,OAAd;AACD,KAJH,EAKGO,KALH,CAKUC,KAAD,IAAW;AAChB,WAAKN,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,UAAU,EAAE,KAA1B;AAAiCC,QAAAA,SAAS,EAAE;AAA5C,OAAd;AACD,KAPH;AAQD;;AAUDS,EAAAA,MAAM,GAAG;AACP;AACA;AACA,UAAMC,UAAU,GAAG;AACjBZ,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADA;AAEjBG,MAAAA,OAAO,EAAE,KAAKA,OAFG;AAGjBE,MAAAA,UAAU,EAAE,KAAKA,UAHA;AAIjBJ,MAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE,UAJN;AAKjBC,MAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG;AALL,KAAnB;AAQA,wBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEU,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,QADd,CADF;AAKD;;AA1CkC;;AA6CrC,eAAehB,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport apiHandler from \"../../api/apiHandler\";\nimport { UserContext } from \"./UserContext\";\n\nclass UserProvider extends Component {\n  state = {\n    user: null,\n    isLoggedIn: false,\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    apiHandler\n      .isLoggedIn()\n      .then((data) => {\n        this.setState({ user: data, isLoggedIn: true, isLoading: false });\n      })\n      .catch((error) => {\n        this.setState({ user: null, isLoggedIn: false, isLoading: false });\n      });\n  }\n\n  setUser = (user) => {\n    this.setState({ user, isLoggedIn: true });\n  };\n\n  removeUser = () => {\n    this.setState({ user: null, isLoggedIn: false });\n  };\n\n  render() {\n    //  Setup all the values/functions you want to expose to anybody reading\n    // from the AuthContext.\n    const authValues = {\n      user: this.state.user,\n      setUser: this.setUser,\n      removeUser: this.removeUser,\n      isLoggedIn: this.state.isLoggedIn,\n      isLoading: this.state.isLoading,\n    };\n\n    return (\n      <UserContext.Provider value={authValues}>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\n\nexport default UserProvider;\n"]},"metadata":{},"sourceType":"module"}