{"ast":null,"code":"var _jsxFileName = \"/Users/NisaKhahidir/Ironhack/projectpets/FurryFriendFinder/FFF/client/src/components/AppMap.jsx\";\nimport React from \"react\";\nimport ReactMapboxGl, { Layer, Feature } from \"react-mapbox-gl\";\nconst Map = ReactMapboxGl({\n  accessToken: process.env.REACT_APP_MAPBOX_TOKEN\n});\nconst missingImg = new Image(20, 30);\nmissingImg.src = \"https://res.cloudinary.com/dqlkhve6f/image/upload/v1611134777/FFF/wanted-2_ke0imc.png\";\nconst foundImg = new Image(20, 30);\nfoundImg.src = \"https://res.cloudinary.com/dqlkhve6f/image/upload/v1611134836/FFF/paw-print-5_zg7tj5.png\";\n\nclass AppMap extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lng: 2.349014,\n      // Default lng and lat set to the center of paris.\n      lat: 48.864716,\n      zoom: 12 // used for map zoom level\n\n    };\n\n    this.handleClick = selectedAnnounce => {\n      // Pass the selectedItem back to the parent.\n      this.props.handleSelectAnnounce(selectedAnnounce);\n    };\n  }\n\n  componentDidMount() {\n    // Get users geo location and set it as the state so the map centers relative to the users current location. :)\n    const success = position => {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      this.setState({\n        lat: latitude,\n        lng: longitude\n      });\n    };\n\n    const error = () => {\n      console.log(\"An error occured geolocating user\");\n    };\n\n    if (!navigator.geolocation) {\n      console.log(\"Geolocation not supported\");\n    } else {\n      navigator.geolocation.getCurrentPosition(success, error);\n    }\n  }\n\n  render() {\n    const missing = this.props.announces.filter(announce => announce.status[0] === \"Missing\");\n    const found = this.props.announces.filter(announce => announce.status[0] === \"Found\");\n    const missingLayer = /*#__PURE__*/React.createElement(Layer, {\n      type: \"symbol\",\n      id: \"missing\",\n      images: [\"missing-icon\", missingImg],\n      layout: {\n        \"icon-image\": \"missing-icon\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, missings.map((announce, index) => /*#__PURE__*/React.createElement(Feature, {\n      key: index,\n      onClick: event => this.handleClick(announce),\n      coordinates: announce.location.coordinates,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    })));\n    const foundLayer = /*#__PURE__*/React.createElement(Layer, {\n      type: \"symbol\",\n      id: \"found\",\n      images: [\"found-icon\", foundImg],\n      layout: {\n        \"icon-image\": \"found-icon\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, founds.map((announce, index) => /*#__PURE__*/React.createElement(Feature, {\n      key: index,\n      onClick: event => this.handleClick(announce),\n      coordinates: announce.location.coordinates,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    })));\n    return /*#__PURE__*/React.createElement(Map // eslint-disable-next-line\n    , {\n      style: \"mapbox://styles/mapbox/light-v10\",\n      zoom: [12],\n      containerStyle: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        position: \"absolute\"\n      },\n      center: [this.state.lng, this.state.lat],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, missingLayer, foundLayer);\n  }\n\n}\n\nexport default AppMap;","map":{"version":3,"sources":["/Users/NisaKhahidir/Ironhack/projectpets/FurryFriendFinder/FFF/client/src/components/AppMap.jsx"],"names":["React","ReactMapboxGl","Layer","Feature","Map","accessToken","process","env","REACT_APP_MAPBOX_TOKEN","missingImg","Image","src","foundImg","AppMap","PureComponent","state","lng","lat","zoom","handleClick","selectedAnnounce","props","handleSelectAnnounce","componentDidMount","success","position","latitude","coords","longitude","setState","error","console","log","navigator","geolocation","getCurrentPosition","render","missing","announces","filter","announce","status","found","missingLayer","missings","map","index","event","location","coordinates","foundLayer","founds","top","left","bottom","right"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactMapboxGl, { Layer, Feature } from \"react-mapbox-gl\";\n\nconst Map = ReactMapboxGl({\n    accessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n});\n\nconst missingImg = new Image(20, 30);\nmissingImg.src = \"https://res.cloudinary.com/dqlkhve6f/image/upload/v1611134777/FFF/wanted-2_ke0imc.png\";\n\nconst foundImg = new Image(20, 30);\nfoundImg.src = \"https://res.cloudinary.com/dqlkhve6f/image/upload/v1611134836/FFF/paw-print-5_zg7tj5.png\";\n\nclass AppMap extends React.PureComponent {\n    state = {\n      lng: 2.349014, // Default lng and lat set to the center of paris.\n      lat: 48.864716,\n      zoom: 12, // used for map zoom level\n    };\n  \n    componentDidMount() {\n      // Get users geo location and set it as the state so the map centers relative to the users current location. :)\n      const success = (position) => {\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n        this.setState({ lat: latitude, lng: longitude });\n      };\n  \n      const error = () => {\n        console.log(\"An error occured geolocating user\");\n      };\n  \n      if (!navigator.geolocation) {\n        console.log(\"Geolocation not supported\");\n      } else {\n        navigator.geolocation.getCurrentPosition(success, error);\n      }\n    }\n  \n    handleClick = (selectedAnnounce) => {\n      // Pass the selectedItem back to the parent.\n      this.props.handleSelectAnnounce(selectedAnnounce);\n    };\n  \n    render() {\n      const missing = this.props.announces.filter(\n        (announce) => announce.status[0] === \"Missing\"\n      );\n  \n      const found = this.props.announces.filter(\n        (announce) => announce.status[0] === \"Found\"\n      );\n  \n      const missingLayer = (\n        <Layer\n          type=\"symbol\"\n          id=\"missing\"\n          images={[\"missing-icon\", missingImg]}\n          layout={{ \"icon-image\": \"missing-icon\" }}\n        >\n          {missings.map((announce, index) => (\n            <Feature\n              key={index}\n              onClick={(event) => this.handleClick(announce)}\n              coordinates={announce.location.coordinates}\n            />\n          ))}\n        </Layer>\n      );\n  \n      const foundLayer = (\n        <Layer\n          type=\"symbol\"\n          id=\"found\"\n          images={[\"found-icon\", foundImg]}\n          layout={{ \"icon-image\": \"found-icon\" }}\n        >\n          {founds.map((announce, index) => (\n            <Feature\n              key={index}\n              onClick={(event) => this.handleClick(announce)}\n              coordinates={announce.location.coordinates}\n            />\n          ))}\n        </Layer>\n      );\n  \n      \n      return (\n        <Map\n          // eslint-disable-next-line\n          style=\"mapbox://styles/mapbox/light-v10\"\n          zoom={[12]}\n          containerStyle={{\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            position: \"absolute\",\n          }}\n          center={[this.state.lng, this.state.lat]}\n        >\n          {missingLayer}\n          {foundLayer}\n    \n        </Map>\n      );\n    }\n  }\n  \n  export default AppMap;\n  "]},"metadata":{},"sourceType":"module"}