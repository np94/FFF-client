{"ast":null,"code":"var _jsxFileName = \"/Users/NisaKhahidir/Ironhack/projectpets/FurryFriendFinder/FFF/client/src/components/AutoComplete.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n/*\n *  Thanks to @mc100s for this component\n *  https://github.com/mc100s\n *\n */\n\nclass AutocompletePlace extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      results: [],\n      isLoading: false\n    };\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n  }\n\n  handleSearchChange(e) {\n    this.setState({\n      search: e.target.value,\n      isLoading: true\n    }); // Stop the previous setTimeout if there is one in progress\n\n    clearTimeout(this.timeoutId); // Launch a new request in 1000ms (1s) => Avoids excessive requests to the end point.\n\n    this.timeoutId = setTimeout(() => {\n      this.performSearch();\n    }, 1000);\n  }\n\n  performSearch() {\n    if (this.state.search === \"\") {\n      this.setState({\n        results: [],\n        isLoading: false\n      });\n      return;\n    } // https://docs.mapbox.com/api/search/geocoding\n\n\n    axios.get(`https://api.mapbox.com/geocoding/v5/mapbox.places/${this.state.search}.json?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`).then(response => {\n      this.setState({\n        results: response.data.features,\n        isLoading: false\n      });\n    });\n  }\n\n  handleAnnounceClicked(place) {\n    this.setState({\n      search: place.place_name,\n      results: []\n    });\n    this.props.onSelect(place);\n  }\n\n  render() {\n    const {\n      results,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AutocompletePlace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      value: this.props.defaultValue || this.state.search,\n      onChange: this.handleSearchChange,\n      placeholder: \"Type an address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"AutocompletePlace-results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, results.map(place => /*#__PURE__*/React.createElement(\"li\", {\n      key: place.id,\n      className: \"AutocompletePlace-announces\",\n      onClick: () => this.handleAnnounceClicked(place),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, place.place_name)), isLoading && /*#__PURE__*/React.createElement(\"li\", {\n      className: \"AutocompletePlace-announces\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default AutocompletePlace;","map":{"version":3,"sources":["/Users/NisaKhahidir/Ironhack/projectpets/FurryFriendFinder/FFF/client/src/components/AutoComplete.jsx"],"names":["React","Component","axios","AutocompletePlace","constructor","props","state","search","results","isLoading","handleSearchChange","bind","e","setState","target","value","clearTimeout","timeoutId","setTimeout","performSearch","get","process","env","REACT_APP_MAPBOX_TOKEN","then","response","data","features","handleAnnounceClicked","place","place_name","onSelect","render","defaultValue","map","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\n\n/*\n *  Thanks to @mc100s for this component\n *  https://github.com/mc100s\n *\n */\n\nclass AutocompletePlace extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      results: [],\n      isLoading: false,\n    };\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n  }\n\n  handleSearchChange(e) {\n    this.setState({\n      search: e.target.value,\n      isLoading: true,\n    });\n\n    // Stop the previous setTimeout if there is one in progress\n    clearTimeout(this.timeoutId);\n\n    // Launch a new request in 1000ms (1s) => Avoids excessive requests to the end point.\n    this.timeoutId = setTimeout(() => {\n      this.performSearch();\n    }, 1000);\n  }\n\n  performSearch() {\n    if (this.state.search === \"\") {\n      this.setState({\n        results: [],\n        isLoading: false,\n      });\n      return;\n    }\n    // https://docs.mapbox.com/api/search/geocoding\n    axios\n      .get(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${this.state.search}.json?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`\n      )\n      .then((response) => {\n        this.setState({\n          results: response.data.features,\n          isLoading: false,\n        });\n      });\n  }\n\n  handleAnnounceClicked(place) {\n    this.setState({\n      search: place.place_name,\n      results: [],\n    });\n\n    this.props.onSelect(place);\n  }\n\n  render() {\n    const { results, isLoading } = this.state;\n    return (\n      <div className=\"AutocompletePlace\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          value={this.props.defaultValue || this.state.search}\n          onChange={this.handleSearchChange}\n          placeholder=\"Type an address\"\n        />\n        <ul className=\"AutocompletePlace-results\">\n          {results.map((place) => (\n            <li\n              key={place.id}\n              className=\"AutocompletePlace-announces\"\n              onClick={() => this.handleAnnounceClicked(place)}\n            >\n              {place.place_name}\n            </li>\n          ))}\n          {isLoading && <li className=\"AutocompletePlace-announces\">Loading...</li>}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default AutocompletePlace;\n"]},"metadata":{},"sourceType":"module"}