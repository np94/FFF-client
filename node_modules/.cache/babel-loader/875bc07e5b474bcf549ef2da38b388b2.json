{"ast":null,"code":"import React from\"react\";import UserContext from\"./UserContext\";// This is what we call a HOC (Higher Order Component).\n// It takes a component as a parameter and it returns a component.\n// This technique can be used to abstract some logic in order to pass\n// some data down as props to the component sent as parameter.\n// The use case of this one is to make it easy to access the user context to\n// any component in our app.\n/* ******************************************************** */ //  How to use:  =>\n// YourComponent.jsx\n// import React from \"react\"\n// function or class YourComponent()\n//\n// ... your implementation.\n//\n// export default withUser(YourComponent)\n// ----------------^ your component now has access to the user context defined in UserProvider.jsx.\n// This component is not exported as default, so you have to import it\n// this way :\n// import { withUser } from \"../relative/path/to/this/file\"\nvar withUser=function withUser(ComponentToPassUserContextTo){return function(props){return/*#__PURE__*/React.createElement(UserContext.Consumer,null,function(context){return/*#__PURE__*/React.createElement(ComponentToPassUserContextTo,Object.assign({},props,{context:context}));});};};export default withUser;","map":{"version":3,"sources":["/Users/NisaKhahidir/Ironhack/projectpets/FurryFriendFinder/FFF/client/src/components/Auth/withUser.jsx"],"names":["React","UserContext","withUser","ComponentToPassUserContextTo","props","context"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA;AACA;AACA;AACA;AAEA;AACA;AAEA,8D,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,4BAAD,CAAkC,CACjD,MAAO,UAAUC,KAAV,CAAiB,CACtB,mBACE,oBAAC,WAAD,CAAa,QAAb,MACG,SAACC,OAAD,qBACC,oBAAC,4BAAD,kBAAkCD,KAAlC,EAAyC,OAAO,CAAEC,OAAlD,GADD,EADH,CADF,CAOD,CARD,CASD,CAVD,CAYA,cAAeH,CAAAA,QAAf","sourcesContent":["import React from \"react\";\n\nimport UserContext from \"./UserContext\";\n\n// This is what we call a HOC (Higher Order Component).\n// It takes a component as a parameter and it returns a component.\n// This technique can be used to abstract some logic in order to pass\n// some data down as props to the component sent as parameter.\n\n// The use case of this one is to make it easy to access the user context to\n// any component in our app.\n\n/* ******************************************************** */\n\n//  How to use:  =>\n// YourComponent.jsx\n// import React from \"react\"\n// function or class YourComponent()\n//\n// ... your implementation.\n//\n// export default withUser(YourComponent)\n// ----------------^ your component now has access to the user context defined in UserProvider.jsx.\n\n// This component is not exported as default, so you have to import it\n// this way :\n// import { withUser } from \"../relative/path/to/this/file\"\n\nconst withUser = (ComponentToPassUserContextTo) => {\n  return function (props) {\n    return (\n      <UserContext.Consumer>\n        {(context) => (\n          <ComponentToPassUserContextTo {...props} context={context} />\n        )}\n      </UserContext.Consumer>\n    );\n  };\n};\n\nexport default withUser;"]},"metadata":{},"sourceType":"module"}